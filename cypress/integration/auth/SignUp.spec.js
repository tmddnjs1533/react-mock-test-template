/**
 * 회원가입 테스트 케이스
 * step 1 : 약관 동의
 * 1. 개인정보 처리 방침 및 이용약관은 초기에 모두 unchecked
 * 2. 개인정보 처리 방침 및 이용약관을 모두 체크해야 다음 단계 버튼 활성화
 * step 2 : 본인 인증
 * 3. 다음 단계 버튼 클릭 시 휴대폰 본인 인증 입력 영역 있음 (이전으로 돌아가도 체크박스는 변경되면 안됨.)
 * 4. 번호 입력 후 인증번호 받기 버튼을 클릭 하여야 인증번호 입력 영역 활성화
 * 5. 인증번호 입력 안하면 다음 단계 버튼 비활성
 * 6. 인증번호 형식이 안맞으면 (6자리) '인증번호 형식이 올바르지 않습니다.' 오류 메시지 출력, 다음 단계 버튼 비활성
 * 7. 인증번호 틀리면 '입력하신 인증번호가 올바르지 않습니다.' 오류 메시지 출력
 * 8. 인증 번호가 맞으면 해당 번호로 가입한 계정이 있을 경우 '이 번호로 가입된 계정이 있습니다.'메시지 출력. 아이디/비밀번호 찾기 추천?
 *     해당 번호로 가입한 계정이 없을 경우 정보 입력 영역 나타남. (단, 이건 정책 정해야 함. 중복 가입 가능하게 할 지)
 * step 3 : 정보 입력
 * 9. 다음 단계 버튼 클릭 시 정보 입력 영역 나타남.
 * 10. 정보 입력 시 유효성 - 입력 영역을 모두 입력함 (lib)
 * 11. 정보 입력 시 유효성 - 비밀번호 확인 불일치 (lib)
 * 12. 정보 입력 시 유효성 - 이메일 중복 (api), 로딩중이면 spinner
 * 13. 유효성 통과하면 가입하기 버튼 활성화
 * step 4 : 가입 완료
 * 14. 가입하기 버튼 클릭 시 가입 완료 메시지 출력, 로그인하러가기 버튼 표시
 */

describe("회원가입 테스트", () => {
  const domain = Cypress.env("domain");
  beforeEach(() => {
    cy.visit(`${domain}auth/sign-up`); // 페이지 접속
  });
  it("개인정보 처리 방침 및 이용약관을 모두 체크해야 다음 단계 버튼 활성화", () => {
    cy.contains("동의하고 계속하기").should("be.disabled"); // 다음 단계 버튼 disabled=true
    cy.get("input#termsOfUse").check(); // 이용약관 체크박스
    cy.get("input#privacyPolicy").check(); // 개인정보 처리방침 체크박스
    cy.contains("동의하고 계속하기").should("not.be.disabled"); // 다음 단계 버튼 disabled=false
  });
  it("다음 단계 버튼 클릭 시 휴대폰 본인 인증 입력 영역 있음", () => {});
  it("번호 입력 후 인증번호 받기 버튼을 클릭 하여야 인증번호 입력 영역 활성화", () => {});
  it("인증번호 입력 안하면 다음 단계 버튼 비활성", () => {});
  it("인증번호 형식이 안맞으면 (6자리) '인증번호 형식이 올바르지 않습니다.' 오류 메시지 출력, 다음 단계 버튼 비활성", () => {});
  it("인증번호 틀리면 '입력하신 인증번호가 올바르지 않습니다.' 오류 메시지 출력", () => {});
  it("인증 번호가 맞으면 해당 번호로 가입한 계정이 있을 경우 '이 번호로 가입된 계정이 있습니다.'메시지 출력.", () => {});
  it("인증 번호가 맞으면 해당 번호로 가입한 계정이 없을 경우 정보 입력 영역 나타남.", () => {});
  it("정보 입력 시 유효성 - 입력 영역을 모두 입력함 (lib)", () => {});
  it("정보 입력 시 유효성 - 비밀번호 확인 불일치 (lib)", () => {});
  it("정보 입력 시 유효성 - 이메일 중복 (api), 로딩중이면 spinner", () => {});
  it("유효성 통과하면 가입하기 버튼 활성화", () => {});
  it("가입하기 버튼 클릭 시 가입 완료 메시지 출력, 로그인하러가기 버튼 표시", () => {});
});
